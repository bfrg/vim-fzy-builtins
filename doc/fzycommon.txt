*fzycommon.txt*  Fuzzy-select buffers, args, tags, help tags, and v:oldfiles.

Author:     bfrg <https://github.com/bfrg>
Website:    https://github.com/bfrg/vim-fzy-common
License:    Same terms as Vim itself (see |license|)


==============================================================================
INTRODUCTION                                     *vim-fzy-common* *fzy-common*

vim-fzy-common provides commands for quickly navigating to listed buffers,
|:oldfiles|, tags generated by ctags, as well as jumping to Vim's help tags
using the fuzzy-searcher https://github.com/jhawthorn/fzy.

Note: This plugin requires https://github.com/bfrg/vim-fzy.
Installation instructions can be found on the plugin's website.

==============================================================================
COMMANDS                                                 *fzy-common-commands*
                                                            *fzy-common-usage*

:Buffer[!]                                                       *fzy-:Buffer*
            List buffers (same as |:ls|), edit the selected buffer in current
            window.

            When the [!] is included, the list will show all existing buffers
            (same as ":ls!").

:SBuffer[!]                                                     *fzy-:SBuffer*
            Same as |fzy-:Buffer|, but edit selected buffer in new |split|.
            Command can be preceded by a command modifier. For example, to
            open the selected buffer in a new |vertical| split, run >
                :vertical SBuffer
<
            Possible modifiers:
                |vertical|
                |tab|
                |topleft|
                |botright|
                |leftabove|  (same as |aboveleft|)
                |rightbelow| (same as |belowright|)

:Args                                                              *fzy-:Args*
            Print global |argument-list|, edit the selected file in current
            window.

:SArgs                                                            *fzy-:SArgs*
            Same as |fzy-:Args|, but open the selected file in a new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Largs                                                            *fzy-:Largs*
            Print local |argument-list| (local to the window), edit the
            selected file in current window.

:SLargs                                                          *fzy-:SLargs*
            Same as |fzy-:Largs|, but open the selected file in a new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:MRUedit                                                        *fzy-:MRUedit*
            List |v:oldfiles|, edit the selected file in current window.
            Note: Only readable files are listed.

:MRUsplit                                                      *fzy-:MRUsplit*
            Same as |fzy-:MRUedit|, but open selected file in new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Tjump                                                            *fzy-:Tjump*
            List tags from all tags files, jump to the selected tag in the
            current window. This is identical to |:tjump|.

:STjump                                                          *fzy-:STjump*
            Same as |fzy-:Tjump|, but splits the window for the selected tag.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Marks[!]                                                         *fzy-:Marks*
            List marks (same as |:marks|), jump to the selected mark in the
            current window.

            Add [!] to jump to the selected mark without changing the
            jumplist when jumping within the current buffer.

:SMarks[!]                                                       *fzy-:SMarks*
            Same as |fzy-:Marks|, but jump to the selected mark in a new
            |split|. Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Help                                                              *fzy-:Help*
            List all help tags, jump to the selected tag in new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

            Note that Vim does not provide any commands to open a help page in
            the current window.

==============================================================================
CONFIGURATION                                              *fzy-common-config*

The height of the terminal window and the fzy input prompt can be changed
through the variable |g:fzy|. Example:
>
    let g:fzy = {'height': 15, 'prompt': 'â–¶ '}
<

==============================================================================
TIPS AND TRICKS                                            *fzy-common-tricks*

Custom commands ~

If you prefer shorter Ex commands, add the following to your |vimrc|:
>
    command! ME MRUedit
    command! MS MRUsplit
    command! MV vertical MRUsplit
    command! MT tab MRUsplit
<
The names are inspired by https://github.com/romainl/vim-tinyMRU.

Mappings ~

If you prefer mappings over Ex commands, you might find the following useful:
>
    nnoremap <silent> <leader>me :<c-u>MRUedit<cr>
    nnoremap <silent> <leader>ms :<c-u>MRUsplit<cr>
    nnoremap <silent> <leader>mv :<c-u>vertical MRUsplit<cr>
    nnoremap <silent> <leader>mt :<c-u>tab MRUsplit<cr>
<

And similar for the other commands:
>
    " Quickly jump to a listed buffer
    nnoremap <silent> <leader>be :<c-u>Buffer<cr>
    nnoremap <silent> <leader>bs :<c-u>SBuffer<cr>
    nnoremap <silent> <leader>bv :<c-u>vertical SBuffer<cr>
    nnoremap <silent> <leader>bt :<c-u>tab SBuffer<cr>

    " Quickly jump to a tag location
    nnoremap <silent> <leader>te :<c-u>Tjump<cr>
    nnoremap <silent> <leader>ts :<c-u>STjump<cr>
    nnoremap <silent> <leader>tv :<c-u>vertical STjump<cr>
    nnoremap <silent> <leader>tt :<c-u>tab STjump<cr>

    " Quickly jump to a help tag
    nnoremap <silent> <leader>hh :<c-u>Help<cr>
    nnoremap <silent> <leader>hv :<c-u>vertical Help<cr>
    nnoremap <silent> <leader>ht :<c-u>tab Help<cr>
<
 vim:tw=78:et:ft=help:norl:
