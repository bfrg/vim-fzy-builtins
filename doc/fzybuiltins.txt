*fzybuiltins.txt*  Fuzzy-select buffers, args, tags, help tags, and v:oldfiles.

Author:     bfrg <https://github.com/bfrg>
Website:    https://github.com/bfrg/vim-fzy-builtins
License:    Same terms as Vim itself (see |license|)


==============================================================================
INTRODUCTION                                                    *fzy-builtins*

vim-fzy-builtins provides commands for quickly navigating to |:buffers|,
|:oldfiles|, tags generated by ctags, |:marks|, and Vim's help tags using the
fuzzy-searcher https://github.com/jhawthorn/fzy.

Note: This plugin requires https://github.com/bfrg/vim-fzy.
Installation instructions can be found on the plugin's website.

==============================================================================
COMMANDS                                               *fzy-builtins-commands*

:Buffer[!]                                                       *fzy-:Buffer*
            List buffers (same as |:ls|), edit the selected buffer in current
            window.

            Add ! to show all existing buffers (listed and unlisted buffers).
            This is similar to the |:ls|! output.

:SBuffer[!]                                                     *fzy-:SBuffer*
            Same as |fzy-:Buffer|, but edit selected buffer in new |split|.
            Command can be preceded by a command modifier. For example, to
            open the selected buffer in a new |vertical| split, run >
                :vertical SBuffer
<
            Possible modifiers:
                |vertical|
                |tab|
                |topleft|
                |botright|
                |leftabove|  (same as |aboveleft|)
                |rightbelow| (same as |belowright|)

:Args                                                              *fzy-:Args*
            List the global |argument-list|, edit the selected file in the
            current window.

:SArgs                                                            *fzy-:SArgs*
            Same as |fzy-:Args|, but open the selected file in a new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Largs                                                            *fzy-:Largs*
            List the local |argument-list| (local to the window), edit the
            selected file in the current window.

:SLargs                                                          *fzy-:SLargs*
            Same as |fzy-:Largs|, but open the selected file in a new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:MRUedit                                                        *fzy-:MRUedit*
            List |v:oldfiles|, edit the selected file in current window.
            Note: Only readable files are listed.

:MRUsplit                                                      *fzy-:MRUsplit*
            Same as |fzy-:MRUedit|, but open selected file in new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Tjump                                                            *fzy-:Tjump*
            List tags from all tags files, jump to the selected tag in the
            current window. This is similar to |:tjump|.

:STjump                                                          *fzy-:STjump*
            Same as |fzy-:Tjump|, but splits the window for the selected tag.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Marks[!]                                                         *fzy-:Marks*
            List marks (same as |:marks|), jump to the selected mark in the
            current window.

            Add ! to jump to the selected mark without changing the jumplist
            when jumping within the current buffer.

:SMarks[!]                                                       *fzy-:SMarks*
            Same as |fzy-:Marks|, but jump to the selected mark in a new
            |split|. Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

:Help                                                              *fzy-:Help*
            List all help tags, jump to the selected tag in new |split|.
            Command can be preceded by the same command modifiers as
            |fzy-:SBuffer|.

            Note that Vim does not provide any commands to open a help page in
            the current window.

==============================================================================
CONFIGURATION                                            *fzy-builtins-config*

                                                          *fzy-builtins-g:fzy*
Options can be passed to fzy through the |Dictionary| variable |g:fzy|. The
following options are supported:

g:fzy.lines                                                      *g:fzy.lines*
            Specify how many lines of results to show. This is equivalent to
            fzy's "--lines" option.
            Default: 10

g:fzy.prompt                                                    *g:fzy.prompt*
            Fzy input prompt. Equivalent to fzy's "--prompt" option.
            Default: "▶ "

g:fzy.showinfo                                                *g:fzy.showinfo*
            Show selection info line. Equivalent to fzy's "--show-info"
            option.
            Default: 0

g:fzy.term_highlight                                    *g:fzy.term_highlight*
            Highlight group for the terminal window.
            Default: |hl-Terminal|

g:fzy.popupwin                                                *g:fzy.popupwin*
             If true, fzy is opened in a |popup-terminal|. Note: This requires
             Vim >= 8.2.0204. The appearance of the popup window can be
             specified through the "popup" entry (see below).
             Default: |v:false|

g:fzy.popup                                                      *g:fzy.popup*
            When this entry is present the fzy terminal is displayed in a
            |popup-window|. Set it to {} for default popup options.
            Default: `{'padding': [0,1,0,1], 'border': [], 'minwidth': 80}`

            The following popup options are supported:
            "line", "col", "pos", "minwidth", "drag", "resize", "close",
            "padding", "border", "borderhighlight", "borderchars",
            "highlight", and "zindex". For more details on each entry see
            |popup-usage| as well as the examples below.

Note: g:fzy is also used by https://github.com/bfrg/vim-fzy-find in order to
provide a uniform fzy (and popup) interface.

==============================================================================
EXAMPLES                                               *fzy-builtins-examples*

1. Display 15 items, use a custom prompt, and show the selection info line: >
    let g:fzy = {
            \ 'lines': 15,
            \ 'prompt': '>>> ',
            \ 'showinfo': 1
            \ }

2. Same as 1. but display fzy in a popup window, use the default popup
   options: >
    let g:fzy = {
            \ 'lines': 15,
            \ 'prompt': '>>> ',
            \ 'showinfo': 1,
            \ 'popupwin': 1,
            \ 'popup': {}
            \ }

3. Use a custom popup border and custom highlighting: >
    let g:fzy = {
            \   'lines': 15,
            \   'showinfo': 1,
            \   'term_highlight': 'NormalDark',
            \   'popupwin': 1,
            \   'popup': {
            \     'minwidth': 90,
            \     'highlight': 'NormalDark',
            \     'borderchars': ['─', '│', '─', '│', '┌', '┐', '┘', '└'],
            \     'padding': [0, 1, 0, 1],
            \     'borderhighlight': ['GreyDark']
            \   }
            \ }

4. Same as 3. but don't draw a popup border: >
    let g:fzy = {
            \   'lines': 15,
            \   'showinfo': 1,
            \   'term_highlight': 'NormalDark',
            \   'popupwin': 1,
            \   'popup': {
            \     'minwidth': 90,
            \     'highlight': 'NormalDark',
            \     'borderchars': [' '],
            \     'padding': [0, 1, 0, 1],
            \     'borderhighlight': ['GreyDark']
            \   }
            \ }

5. Display the popup window at the 5th screen line from the top of the
   screen: >
    let g:fzy = {
            \   'lines': 15,
            \   'showinfo': 1,
            \   'popupwin': 1,
            \   'popup': {
            \     'padding': [0, 1, 0, 1],
            \     'pos': 'topleft',
            \     'line': 5,
            \   }
            \ }

==============================================================================
TIPS AND TRICKS                                          *fzy-builtins-tricks*

Custom commands ~

If you prefer shorter Ex commands, add the following to your |vimrc|:
>
    command ME MRUedit
    command MS MRUsplit
    command MV vertical MRUsplit
    command MT tab MRUsplit
<
The names are inspired by https://github.com/romainl/vim-tinyMRU.

Mappings ~

If you prefer mappings over Ex commands, you might find the following useful:
>
    nnoremap <silent> <leader>me :<c-u>MRUedit<cr>
    nnoremap <silent> <leader>ms :<c-u>MRUsplit<cr>
    nnoremap <silent> <leader>mv :<c-u>vertical MRUsplit<cr>
    nnoremap <silent> <leader>mt :<c-u>tab MRUsplit<cr>
<
And similar for the other commands:
>
    " Quickly jump to a listed buffer
    nnoremap <silent> <leader>be :<c-u>Buffer<cr>
    nnoremap <silent> <leader>bs :<c-u>SBuffer<cr>
    nnoremap <silent> <leader>bv :<c-u>vertical SBuffer<cr>
    nnoremap <silent> <leader>bt :<c-u>tab SBuffer<cr>

    " Quickly jump to a tag location
    nnoremap <silent> <leader>te :<c-u>Tjump<cr>
    nnoremap <silent> <leader>ts :<c-u>STjump<cr>
    nnoremap <silent> <leader>tv :<c-u>vertical STjump<cr>
    nnoremap <silent> <leader>tt :<c-u>tab STjump<cr>

    " Quickly jump to a help tag
    nnoremap <silent> <leader>hh :<c-u>Help<cr>
    nnoremap <silent> <leader>hv :<c-u>vertical Help<cr>
    nnoremap <silent> <leader>ht :<c-u>tab Help<cr>
<
 vim:tw=78:et:ft=help:norl:
